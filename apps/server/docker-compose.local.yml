version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: chat-postgres
    environment:
      POSTGRES_DB: chat_app
      POSTGRES_USER: chat_user
      POSTGRES_PASSWORD: chat_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chat_user -d chat_app"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Socket.IO
  redis:
    image: redis:7-alpine
    container_name: chat-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Chat Server
  server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-server-local
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - PORT=8080
      - DATABASE_URL=postgresql://chat_user:chat_password@postgres:5432/chat_app
      - REDIS_URL=redis://redis:6379
      - BETTER_AUTH_SECRET=your-secret-key-change-this-in-production
      - BETTER_AUTH_URL=http://localhost:8080
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  redis_data: 